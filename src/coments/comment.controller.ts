import {
    Controller,
    Post,
    Body,
    Param,
    Get,
    Delete,
    UseGuards,
    Req, UnauthorizedException,
} from '@nestjs/common';
import { CommentService } from './comment.service';
import { CreateCommentDto } from './dto/create-comment.dto';
import { AuthGuard } from '@/auth/guards/auth.guard'; // üëà —Ç–≤–æ–π guard, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–µ—Å—Å–∏—é
import { Request } from 'express';

@Controller('posts/:postId/comments') // üëà –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å posts/ID/comments
export class CommentController {
    constructor(private readonly commentService: CommentService) {}

    // üîê –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º)
    @Post()
    @UseGuards(AuthGuard)
    async create(
        @Param('postId') postId: number,
        @Body() dto: CreateCommentDto,
        @Req() req: Request
    ) {
        if (!req.user) {
            throw new UnauthorizedException('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        }
        return this.commentService.create(+postId, dto, req.user);
    }



    // üìñ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –ø–æ—Å—Ç—É
    @Get()
    async findAll(@Param('postId') postId: number) {
        return this.commentService.findAll(+postId); // üëà –ø—Ä–æ—Å—Ç–æ –æ—Ç–¥–∞–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç—ã –∫ –ø–æ—Å—Ç—É
    }

    // üóë –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É)
    @UseGuards(AuthGuard)
    @Delete(':commentId')
    async delete(
        @Param('commentId') commentId: number,
        @Req() req: Request
    ) {
        if (!req.user) {
            throw new UnauthorizedException('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        }
        return this.commentService.delete(+commentId, req.user);
    }

}
